/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/simcard/type/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card Type */
        put: operations["update"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/supplier/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Supplier */
        put: operations["update_1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card Specification */
        put: operations["update_2"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/{id}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Organization Status */
        put: operations["updateStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Organization */
        put: operations["update_3"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/{id}/status/{isActive}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Alert Configuration Status */
        put: operations["updateStatus_1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Alert Configuration */
        put: operations["update_4"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/{id}/notify/{notifyStatus}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Alert Log Notification Status */
        put: operations["updateNotifyStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/{imsiId}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update IMSI Status by ID (Deprecated)
         * @deprecated
         */
        put: operations["updateStatus_2"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update IMSI Resource by ID (Deprecated)
         * @deprecated
         */
        put: operations["update_5"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/imsi/{imsi}/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update IMSI Resource by IMSI */
        put: operations["updateByImsi"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/imsi/{imsi}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update IMSI Status by IMSI */
        put: operations["updateStatusByImsi"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/batch/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 批量更新IMSI资源状态 */
        put: operations["batchUpdateStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/group/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update IMSI Group */
        put: operations["update_6"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/{id}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card Status */
        put: operations["updateStatus_3"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/{id}/deactivate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Deactivate SIM Card */
        put: operations["deactivateCard"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/{id}/activate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Activate SIM Card */
        put: operations["activateCard"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card */
        put: operations["update_7"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/{id}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card Batch Status */
        put: operations["updateStatus_4"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update SIM Card Batch */
        put: operations["update_8"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/update-available-count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Batch Update Available Count */
        put: operations["updateAvailableCount"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改区域 */
        put: operations["update_9"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/enable/{regionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 启用区域 */
        put: operations["enable"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/disable/{regionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 禁用区域 */
        put: operations["disable"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改号码段 */
        put: operations["update_10"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/updateNumberCount/{segmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 更新号码段的号码总数 -- 没什么用 */
        put: operations["updateNumberCount"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/enable/{segmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 启用号码段 */
        put: operations["enable_1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/disable/{segmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 禁用号码段 */
        put: operations["disable_1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改号码模式 */
        put: operations["update_11"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/enable/{patternId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 启用号码模式 */
        put: operations["enable_2"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/disable/{patternId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 禁用号码模式 */
        put: operations["disable_2"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改号码级别 */
        put: operations["update_12"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/enable/{levelId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 启用号码级别 */
        put: operations["enable_3"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/disable/{levelId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 禁用号码级别 */
        put: operations["disable_3"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/unfreeze": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 解冻号码 */
        put: operations["unfreeze"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/reserve": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 预留号码 */
        put: operations["reserve"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/release": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 释放号码 */
        put: operations["release"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/recycle": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 回收号码 */
        put: operations["recycle"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/freeze": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 冻结号码 */
        put: operations["freeze"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/assign": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 分配号码 */
        put: operations["assign"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/{number}/activate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 激活号码 */
        put: operations["activate"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/update/{number}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改号码资源 */
        put: operations["update_13"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/batch-operation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 批量操作号码 */
        put: operations["batchOperation"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改HLR/交换机 */
        put: operations["update_14"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/enable/{hlrId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 启用HLR/交换机 */
        put: operations["enable_4"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/disable/{hlrId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 禁用HLR/交换机 */
        put: operations["disable_4"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/{approvalId}/reject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 审批拒绝 */
        put: operations["reject"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/{approvalId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 取消申请 */
        put: operations["cancel"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/{approvalId}/approve": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 审批通过 */
        put: operations["approve"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/retry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 重试批量绑定任务 */
        put: operations["retryTask"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 取消批量绑定任务 */
        put: operations["cancelTask"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/updateTask": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 更新批量绑定任务 */
        put: operations["updateTask"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/type/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add SIM Card Type */
        post: operations["add"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/supplier/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Supplier */
        post: operations["add_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add SIM Card Specification */
        post: operations["add_2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Organization */
        post: operations["add_3"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/count/type/condition": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Count Operation Type Distribution by Conditions */
        post: operations["countByOperationType"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/count/status/condition": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Count Operation Result Status Distribution by Conditions */
        post: operations["countByResultStatus"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Manually Trigger Inventory Check and Generate Alerts */
        post: operations["checkInventory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Alert Configuration */
        post: operations["add_4"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 生成IMSI资源 */
        post: operations["generate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add IMSI Resource */
        post: operations["add_5"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/group/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add IMSI Group */
        post: operations["add_6"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/recycle": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Batch Recycle SIM Cards */
        post: operations["recycleCards"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Batch Import SIM Cards */
        post: operations["importCards"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/allocate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Batch Allocate SIM Cards */
        post: operations["allocateCards"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add SIM Card */
        post: operations["add_7"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add SIM Card Batch */
        post: operations["add_8"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增区域 */
        post: operations["add_9"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增号码段 */
        post: operations["add_10"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增号码模式 */
        post: operations["add_11"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增号码级别 */
        post: operations["add_12"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/import-excel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Excel批量导入 */
        post: operations["importFromExcel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增号码资源 */
        post: operations["add_13"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/add": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 新增HLR/交换机 */
        post: operations["add_14"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/apply": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 申请号码 */
        post: operations["applyNumber"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/stop": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 停止任务 */
        post: operations["stopTask"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 启动任务 */
        post: operations["startTask"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/unbind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 创建批量解绑任务 */
        post: operations["createUnbindTask"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/test-transaction": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 测试Spring事务注解 */
        post: operations["testTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/createTask": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 创建批量绑定任务 */
        post: operations["createTask"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/{bindingId}/unbind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 解绑号码和IMSI */
        post: operations["unbind"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/bind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 绑定号码和IMSI */
        post: operations["bind"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/batch-unbind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 批量解绑号码和IMSI */
        post: operations["batchUnbind"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/batch-unbind-v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 批量解绑号码和IMSI（新版本） */
        post: operations["batchUnbindV2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/batch-bind": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 批量绑定号码和IMSI */
        post: operations["batchBind"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/trigger-notification": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Trigger Notification Processing
         * @description Manually trigger notification processing
         */
        post: operations["triggerNotificationProcessing"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/trigger-check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Trigger Alert Check
         * @description Manually trigger inventory alert check
         */
        post: operations["triggerAlertCheck"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/retry-failed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Retry Failed Notifications
         * @description Retry all failed alert notifications
         */
        post: operations["retryFailedNotifications"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/process-pending": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Process Pending Notifications
         * @description Process all pending alert notifications
         */
        post: operations["processPendingNotifications"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/check-inventory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Check Inventory
         * @description Check inventory and generate alerts
         */
        post: operations["checkInventoryAndGenerateAlerts"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/type/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Type Details */
        get: operations["getDetail"];
        put?: never;
        post?: never;
        /** Delete SIM Card Type */
        delete: operations["delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/type/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query SIM Card Type List */
        get: operations["page"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/type/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Enabled SIM Card Types */
        get: operations["listAllEnabled"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/supplier/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Supplier Details */
        get: operations["getDetail_1"];
        put?: never;
        post?: never;
        /** Delete Supplier */
        delete: operations["delete_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/supplier/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query Supplier List */
        get: operations["page_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/supplier/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Enabled Suppliers */
        get: operations["listAllEnabled_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Specification Details */
        get: operations["getDetail_2"];
        put?: never;
        post?: never;
        /** Delete SIM Card Specification */
        delete: operations["delete_2"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query SIM Card Specification List */
        get: operations["page_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Enabled SIM Card Specifications */
        get: operations["listAllEnabled_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/specification/list/type/{typeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Specification List by Type ID */
        get: operations["listByTypeId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization Details */
        get: operations["getDetail_3"];
        put?: never;
        post?: never;
        /** Delete Organization */
        delete: operations["delete_3"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/tree": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization Tree */
        get: operations["getTree"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query Organization List */
        get: operations["page_3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/organization/code/{code}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization by Code */
        get: operations["getByCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Operation Record Details */
        get: operations["getDetail_4"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recent Operation Records */
        get: operations["getRecentOperations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query SIM Card Operation Record List */
        get: operations["page_4"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/iccid/{iccid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Operation Records for Specified ICCID */
        get: operations["getOperationsByIccid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/count/type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Count Operations by Type */
        get: operations["countByOperationType_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/operation/card/{cardId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Operation Records for Specified SIM Card */
        get: operations["getOperationsByCardId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Alert Configuration Details */
        get: operations["getDetail_5"];
        put?: never;
        post?: never;
        /** Delete Alert Configuration */
        delete: operations["delete_4"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query Alert Configuration List */
        get: operations["page_5"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Alert Log Details */
        get: operations["getDetail_6"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Recent Alert Logs */
        get: operations["getRecentLogs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query Alert Log List */
        get: operations["page_6"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/count/unnotified": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Count Unnotified Alert Logs */
        get: operations["countUnnotifiedLogs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/log/alert/{alertId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Logs for Specified Alert ID */
        get: operations["getLogsByAlertId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/inventory/alert/active": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Active Alert Configurations */
        get: operations["listActive"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/{imsiId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get IMSI Resource Details */
        get: operations["getDetail_7"];
        put?: never;
        post?: never;
        /**
         * Delete IMSI Resource by ID (Deprecated)
         * @deprecated
         */
        delete: operations["delete_5"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query IMSI Resource List */
        get: operations["page_7"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/imsi/{imsi}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据IMSI号码获取资源详情 */
        get: operations["getByImsi"];
        put?: never;
        post?: never;
        /** Delete IMSI Resource by IMSI */
        delete: operations["deleteByImsi"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/group/{groupId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据组ID获取IMSI资源列表 */
        get: operations["listByGroupId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/resource/count/available/{groupId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取指定组的可用IMSI数量 */
        get: operations["countAvailable"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/group/{groupId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get IMSI Group Details */
        get: operations["getDetail_8"];
        put?: never;
        post?: never;
        /** Delete IMSI Group */
        delete: operations["delete_6"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/group/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query IMSI Group List */
        get: operations["page_8"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/imsi/group/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All IMSI Groups */
        get: operations["list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Details */
        get: operations["getDetail_9"];
        put?: never;
        post?: never;
        /** Delete SIM Card */
        delete: operations["delete_7"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query SIM Card List */
        get: operations["page_9"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/iccid/{iccid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Details by ICCID */
        get: operations["getByIccid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/count/type": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Count SIM Cards by Card Type */
        get: operations["countByCardType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/count/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Count SIM Cards by Status */
        get: operations["countByStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simcard/card/count/org": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Count SIM Cards by Organization */
        get: operations["countByOrganization"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get SIM Card Batch Details */
        get: operations["getById"];
        put?: never;
        post?: never;
        /** Delete SIM Card Batch */
        delete: operations["delete_8"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Paginated Query SIM Card Batch List */
        get: operations["page_10"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询所有SIM卡批次列表 */
        get: operations["list_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sim-card-batch/alert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Query Stock Alert Batch List */
        get: operations["listAlerts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/{regionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取区域详情 */
        get: operations["getDetail_10"];
        put?: never;
        post?: never;
        /** 删除区域 */
        delete: operations["delete_9"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/tree": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取区域树 */
        get: operations["listRegionTree"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询区域 */
        get: operations["page_11"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/listByParentId/{parentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取子区域列表 */
        get: operations["listByParentId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/region/listAllEnabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有启用的区域 -- 按需选择，不一定有用 */
        get: operations["listAllEnabled_3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/operation-log/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取操作日志统计信息 -- 暂时用不到 */
        get: operations["getStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/operation-log/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码操作日志 */
        get: operations["page_12"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/operation-log/number/{numberId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询号码的操作日志 */
        get: operations["listByNumberId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/operation-log/number-string/{number}/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据号码分页查询操作日志 */
        get: operations["pageByNumber"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/{segmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取号码段详情 */
        get: operations["getDetail_11"];
        put?: never;
        post?: never;
        /** 删除号码段 */
        delete: operations["delete_10"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码段 */
        get: operations["page_13"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/listByType/{segmentType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据类型获取号码段列表 */
        get: operations["listByType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/listByRegionId/{regionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据区域ID获取号码段列表 */
        get: operations["listByRegionId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/listByHlrSwitchId/{hlrSwitchId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据HLR/交换机ID获取号码段列表 */
        get: operations["listByHlrSwitchId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/listByConditions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 根据条件查询号码段列表
         * @description 支持按类型、区域ID、HLR/交换机ID进行单条件或组合条件查询，所有参数均为可选
         */
        get: operations["listByConditions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/listAllEnabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有启用的号码段 */
        get: operations["listAllEnabled_4"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberSegment/getByCode/{segmentCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据号码段代码获取号码段 */
        get: operations["getBySegmentCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/{patternId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取号码模式详情 */
        get: operations["getDetail_12"];
        put?: never;
        post?: never;
        /** 删除号码模式 */
        delete: operations["delete_11"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/validateNumber": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 验证号码是否符合指定的号码模式 */
        get: operations["validateNumber"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码模式 */
        get: operations["page_14"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/listByLevelId/{levelId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据级别ID获取号码模式列表 */
        get: operations["listByLevelId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberPattern/listAllEnabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有启用的号码模式 */
        get: operations["listAllEnabled_5"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/{levelId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取号码级别详情 */
        get: operations["getDetail_13"];
        put?: never;
        post?: never;
        /** 删除号码级别 */
        delete: operations["delete_12"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码级别 */
        get: operations["page_15"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/listNeedApproval": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取需要审批的号码级别列表 */
        get: operations["listNeedApproval"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/listAllEnabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有启用的号码级别 */
        get: operations["listAllEnabled_6"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/numberLevel/getByCode/{levelCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据级别代码获取号码级别 */
        get: operations["getByLevelCode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取号码统计信息 */
        get: operations["getStatistics_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码资源 */
        get: operations["page_16"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/export-excel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 导出Excel */
        get: operations["exportToExcel"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/download-template": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 下载导入模板 */
        get: operations["downloadTemplate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/detail/{number}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据号码查询详情 */
        get: operations["detail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/basic/{number}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取号码基础信息 */
        get: operations["getBasicInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/{hlrId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取HLR/交换机详情 */
        get: operations["getDetail_14"];
        put?: never;
        post?: never;
        /** 删除HLR/交换机 */
        delete: operations["delete_14"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询HLR/交换机 */
        get: operations["page_17"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/listByType/{hlrType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据类型获取HLR/交换机列表 */
        get: operations["listByType_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/listByRegionId/{regionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据区域ID获取HLR/交换机列表 */
        get: operations["listByRegionId_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/hlrSwitch/listAllEnabled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取所有启用的HLR/交换机 */
        get: operations["listAllEnabled_7"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/{approvalId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取审批详情 */
        get: operations["getDetail_15"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码审批 */
        get: operations["page_18"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/approval/no/{approvalNo}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据审批编号获取详情 */
        get: operations["getByApprovalNo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取批量绑定任务详情 */
        get: operations["getTaskDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/detail/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询批量绑定详情 */
        get: operations["pageDetail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskId}/detail/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 统计任务各状态详情数量 */
        get: operations["countDetailStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询批量绑定任务 */
        get: operations["page_19"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询号码与IMSI绑定关系 */
        get: operations["page_20"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 统计绑定数量 */
        get: operations["countBindings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/by-order/{orderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据订单ID获取绑定关系列表 */
        get: operations["getByOrderId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/by-number/{number}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据号码获取绑定关系 */
        get: operations["getByNumber"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/number-imsi/by-imsi/{imsi}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据IMSI获取绑定关系 */
        get: operations["getByImsi_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Alert System Status
         * @description Get current status of alert system
         */
        get: operations["getAlertSystemStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/simcard/alert/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Alert List */
        get: operations["list_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/msisdn/number/delete/{number}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** 删除号码资源 */
        delete: operations["delete_13"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/binding/task/{taskIds}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** 删除批量绑定任务 */
        delete: operations["deleteTasks"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SimCardType: {
            /** Format: int64 */
            typeId?: number;
            typeName?: string;
            typeCode?: string;
            description?: string;
            /** Format: int32 */
            status?: number;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
            /** Format: int64 */
            createUserId?: number;
            /** Format: int64 */
            updateUserId?: number;
        };
        CommonResultVoid: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: Record<string, never>;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        Supplier: {
            /** Format: int64 */
            supplierId?: number;
            supplierName?: string;
            supplierCode?: string;
            contactPerson?: string;
            contactPhone?: string;
            email?: string;
            address?: string;
            /** Format: int32 */
            status?: number;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
            /** Format: int64 */
            createUserId?: number;
            /** Format: int64 */
            updateUserId?: number;
        };
        SimCardSpecification: {
            /** Format: int64 */
            specId?: number;
            specName?: string;
            specCode?: string;
            /** Format: int64 */
            typeId?: number;
            description?: string;
            /** Format: int32 */
            status?: number;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
            /** Format: int64 */
            createUserId?: number;
            /** Format: int64 */
            updateUserId?: number;
        };
        OrganizationDTO: {
            /** Format: int64 */
            id?: number;
            name?: string;
            code?: string;
            /** Format: int32 */
            type?: number;
            typeName?: string;
            /** Format: int64 */
            parentId?: number;
            parentName?: string;
            contactPerson?: string;
            contactPhone?: string;
            email?: string;
            address?: string;
            /** Format: int32 */
            status?: number;
            statusName?: string;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
        };
        SimCardInventoryAlertDTO: {
            /** Format: int64 */
            id?: number;
            name?: string;
            /** Format: int64 */
            cardTypeId?: number;
            cardTypeName?: string;
            /** Format: int64 */
            specId?: number;
            specName?: string;
            /** Format: int64 */
            supplierId?: number;
            supplierName?: string;
            /** Format: int64 */
            orgId?: number;
            orgName?: string;
            /** Format: int32 */
            minThreshold?: number;
            /** Format: int32 */
            maxThreshold?: number;
            /** Format: int32 */
            alertType?: number;
            alertTypeName?: string;
            /** Format: int32 */
            isActive?: number;
            statusName?: string;
            notifyEmails?: string;
            notifyPhones?: string;
            /** Format: date-time */
            lastAlertTime?: string;
            remark?: string;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
            /** Format: int64 */
            createUserId?: number;
            /** Format: int64 */
            updateUserId?: number;
        };
        /** @description IMSI资源信息 */
        ImsiResourceDTO: {
            /**
             * Format: int64
             * @description IMSI ID
             */
            imsiId?: number;
            /** @description IMSI号码 */
            imsi?: string;
            /**
             * Format: int32
             * @description IMSI类型：1-GSM Postpaid，2-GSM Prepaid，3-CDMA......
             */
            imsiType?: number;
            /** @description IMSI类型描述 */
            imsiTypeDesc?: string;
            /**
             * Format: int64
             * @description 所属组ID
             */
            groupId?: number;
            /** @description 所属组名称 */
            groupName?: string;
            /**
             * Format: int64
             * @description 供应商ID
             */
            supplierId?: number;
            /** @description 供应商名称 */
            supplierName?: string;
            /** @description 密码 */
            password?: string;
            /** @description 账单ID */
            billId?: string;
            /**
             * Format: int32
             * @description 状态：1-空闲，2-已绑定，3-已使用，4-已锁定
             */
            status?: number;
            /** @description 状态描述 */
            statusDesc?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
        };
        /** @description IMSI组信息 */
        ImsiGroupDTO: {
            /**
             * Format: int64
             * @description 组ID
             */
            groupId?: number;
            /** @description 组名称 */
            groupName?: string;
            /** @description IMSI前缀 */
            imsiPrefix?: string;
            /** @description 起始IMSI */
            imsiStart?: string;
            /** @description 结束IMSI */
            imsiEnd?: string;
            /**
             * Format: int32
             * @description IMSI类型：1-GSM Postpaid，2-GSM Prepaid，3-CDMA......
             */
            imsiType?: number;
            /** @description IMSI类型描述 */
            imsiTypeDesc?: string;
            /**
             * Format: int32
             * @description 总数量
             */
            totalCount?: number;
            /**
             * Format: int32
             * @description 已使用数量
             */
            usedCount?: number;
            /**
             * Format: int32
             * @description 剩余数量
             */
            remainingCount?: number;
            /** @description 使用率 */
            usageRate?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
        };
        /** @description SIM卡信息 */
        SimCardDTO: {
            /**
             * Format: int64
             * @description SIM卡ID
             */
            id?: number;
            /** @description ICCID */
            iccid?: string;
            /** @description MSISDN */
            msisdn?: string;
            /** @description IMSI */
            imsi?: string;
            /** @description PIN1 */
            pin1?: string;
            /** @description PIN2 */
            pin2?: string;
            /** @description PUK1 */
            puk1?: string;
            /** @description PUK2 */
            puk2?: string;
            /** @description KI */
            ki?: string;
            /** @description ADM */
            adm?: string;
            /**
             * Format: int64
             * @description 批次ID
             */
            batchId?: number;
            /** @description 批次名称 */
            batchName?: string;
            /**
             * Format: int64
             * @description 组织ID
             */
            orgId?: number;
            /** @description 组织名称 */
            orgName?: string;
            /**
             * Format: int32
             * @description 状态：1-未激活，2-已激活，3-停用
             */
            status?: number;
            /** @description 状态描述 */
            statusDesc?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description 备注 */
            remark?: string;
        };
        CommonResultBoolean: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: boolean;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardBatchDTO: {
            /** Format: int64 */
            id?: number;
            batchName?: string;
            batchCode?: string;
            /** Format: int64 */
            orgId?: number;
            orgName?: string;
            /** Format: int32 */
            totalCount?: number;
            /** Format: int32 */
            usedCount?: number;
            /** Format: int32 */
            availableCount?: number;
            /** Format: int32 */
            alertThreshold?: number;
            /** Format: int32 */
            status?: number;
            remark?: string;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
        };
        /** @description 区域信息 */
        Region: {
            /**
             * Format: int64
             * @description 区域ID
             */
            regionId?: number;
            /** @description 区域代码 */
            regionCode?: string;
            /** @description 区域名称 */
            regionName?: string;
            /**
             * Format: int32
             * @description 区域类型：1-国家，2-省份，3-城市，4-区县
             */
            regionType?: number;
            /**
             * Format: int64
             * @description 父区域ID
             */
            parentId?: number;
            /**
             * Format: int32
             * @description 状态：0-禁用，1-启用
             */
            status?: number;
            /** @description 描述 */
            description?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
            /** @description 子区域列表 */
            children?: components["schemas"]["Region"][];
        };
        /** @description 号码段信息 */
        NumberSegment: {
            /**
             * Format: int64
             * @description 号码段ID
             */
            segmentId?: number;
            /** @description 号码段代码 */
            segmentCode?: string;
            /**
             * Format: int32
             * @description 号码段类型：1-PSTN Number，2-Mobile Number，3-FTTH Number，4-SIP，5-VSAT
             */
            segmentType?: number;
            /**
             * Format: int64
             * @description HLR/交换机ID
             */
            hlrSwitchId?: number;
            /**
             * Format: int64
             * @description 区域ID
             */
            regionId?: number;
            /** @description 开始号码 */
            startNumber?: string;
            /** @description 结束号码 */
            endNumber?: string;
            /**
             * Format: int64
             * @description 总数量
             */
            totalQty?: number;
            /**
             * Format: int64
             * @description 空闲数量
             */
            idleQty?: number;
            /**
             * Format: int64
             * @description 已激活数量
             */
            activatedQty?: number;
            /**
             * Format: int64
             * @description 已冻结数量
             */
            frozenQty?: number;
            /**
             * Format: int64
             * @description 已锁定数量
             */
            blockedQty?: number;
            /**
             * Format: int64
             * @description 已预留数量
             */
            reservedQty?: number;
            /**
             * Format: int32
             * @description 状态：0-禁用，1-启用
             */
            status?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        /** @description 号码模式信息 */
        NumberPattern: {
            /**
             * Format: int64
             * @description 模式ID
             */
            patternId?: number;
            /** @description 模式名称 */
            patternName?: string;
            /**
             * Format: int64
             * @description 归属号码级别ID
             */
            levelId?: number;
            /** @description 模式格式 */
            patternFormat?: string;
            /** @description 正则表达式 */
            expression: string;
            /** @description 备注 */
            remark?: string;
            /**
             * Format: int32
             * @description 状态：0-禁用，1-启用
             */
            status?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        /** @description 号码级别信息 */
        NumberLevel: {
            /**
             * Format: int64
             * @description 级别ID
             */
            levelId?: number;
            /** @description 级别名称 */
            levelName?: string;
            /** @description 级别代码 */
            levelCode?: string;
            /** @description 费用 */
            charge?: number;
            /** @description 描述 */
            description?: string;
            /**
             * Format: int32
             * @description 状态：0-禁用，1-启用
             */
            status?: number;
            /**
             * Format: int32
             * @description 是否需要审批：0-不需要审批，1-需要审批
             */
            needApproval?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        /** @description 号码资源信息 */
        NumberResourceDTO: {
            number?: string;
            /** Format: int32 */
            numberType?: number;
            /** Format: int64 */
            segmentId?: number;
            /** Format: int64 */
            levelId?: number;
            /** Format: int64 */
            patternId?: number;
            /** Format: int64 */
            hlrId?: number;
            /** Format: int64 */
            hlrSwitchId?: number;
            iccid?: string;
            /** Format: int32 */
            status?: number;
            charge?: number;
            attributiveOrg?: string;
            remark?: string;
            needPage?: boolean;
            /** Format: int32 */
            current?: number;
            /** Format: int32 */
            size?: number;
        };
        CommonResultInteger: {
            /** Format: int32 */
            code?: number;
            message?: string;
            /** Format: int32 */
            data?: number;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description HLR/交换机信息 */
        HlrSwitch: {
            /**
             * Format: int64
             * @description HLR/交换机ID
             */
            hlrId?: number;
            /** @description HLR/交换机名称 */
            hlrName?: string;
            /** @description HLR/交换机代码 */
            hlrCode?: string;
            /**
             * Format: int32
             * @description HLR/交换机类型：1-HLR，2-交换机，3-服务平台
             */
            hlrType?: number;
            /**
             * Format: int64
             * @description 区域ID
             */
            regionId?: number;
            /** @description IP地址 */
            ipAddress?: string;
            /** @description 端口 */
            port?: string;
            /**
             * Format: int32
             * @description 状态：0-禁用，1-启用
             */
            status?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        /** @description 任务信息 */
        BatchBindingTask: {
            /**
             * Format: int64
             * @description 任务ID
             */
            taskId?: number;
            /** @description 任务名称 */
            taskName?: string;
            /**
             * Format: int32
             * @description 任务类型：1-绑定，2-解绑
             */
            taskType?: number;
            /** @description 文件路径 */
            filePath?: string;
            /**
             * Format: int32
             * @description 总数
             */
            totalCount?: number;
            /**
             * Format: int32
             * @description 成功数量
             */
            successCount?: number;
            /**
             * Format: int32
             * @description 失败数量
             */
            failCount?: number;
            /**
             * Format: int32
             * @description 状态：0-待处理，1-处理中，2-已完成，3-已失
             */
            status?: number;
            /**
             * Format: date-time
             * @description 开始时间
             */
            startTime?: string;
            /**
             * Format: date-time
             * @description 结束时间
             */
            endTime?: string;
            /** @description 错误信息 */
            errorMsg?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建者ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新者ID
             */
            updateUserId?: number;
        };
        SimCardOperationQuery: {
            /** Format: int32 */
            pageNum?: number;
            /** Format: int32 */
            pageSize?: number;
            orderByColumn?: string;
            isAsc?: string;
            /** Format: int64 */
            cardId?: number;
            iccid?: string;
            /** Format: int32 */
            operationType?: number;
            /** Format: int64 */
            operatorUserId?: number;
            /** Format: int64 */
            stockOutOrgId?: number;
            /** Format: int64 */
            stockInOrgId?: number;
            /** Format: int32 */
            resultStatus?: number;
            beginDate?: string;
            endDate?: string;
        };
        CommonResultMapStringObject: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: {
                [key: string]: Record<string, never>;
            };
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultString: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: string;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description IMSI生成请求 */
        ImsiGenerateRequest: {
            /**
             * Format: int64
             * @description 组ID
             */
            groupId: number;
            /**
             * Format: int32
             * @description 生成数量
             */
            count: number;
            /**
             * Format: int64
             * @description 操作用户ID
             */
            operatorUserId: number;
            /**
             * Format: int64
             * @description 供应商ID
             */
            supplierId?: number;
        };
        CommonResultListImsiResourceDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["ImsiResourceDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultLong: {
            /** Format: int32 */
            code?: number;
            message?: string;
            /** Format: int64 */
            data?: number;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description 号码与IMSI绑定信息 */
        NumberImsiBinding: {
            /**
             * Format: int64
             * @description 绑定ID
             */
            bindingId?: number;
            /**
             * Format: int64
             * @description 号码ID
             */
            numberId?: number;
            /** @description 号码 */
            number?: string;
            /**
             * Format: int64
             * @description IMSI ID
             */
            imsiId?: number;
            /** @description IMSI号码 */
            imsi?: string;
            /** @description ICCID */
            iccid?: string;
            /**
             * Format: int64
             * @description 订单ID
             */
            orderId?: number;
            /**
             * Format: date-time
             * @description 绑定时间
             */
            bindingTime?: string;
            /**
             * Format: int32
             * @description 绑定类型: 1-普通绑定，2-批量绑定，3-测试
             */
            bindingType?: number;
            /**
             * Format: int32
             * @description 绑定状态：1-已绑定，2-已解绑
             */
            bindingStatus?: number;
            /**
             * Format: date-time
             * @description 解绑时间
             */
            unbindTime?: string;
            /**
             * Format: int64
             * @description 操作用户ID
             */
            operatorUserId?: number;
            /** @description 备注 */
            remark?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        /** @description 批量解绑请求 */
        BatchUnbindRequest: {
            /** @description 解绑项目列表 */
            unbindItems?: components["schemas"]["UnbindItem"][];
            /**
             * Format: int64
             * @description 操作用户ID
             */
            operatorUserId?: number;
            /** @description 备注 */
            remark?: string;
        };
        /** @description 解绑项目 */
        UnbindItem: {
            /**
             * Format: int64
             * @description 绑定ID
             */
            bindingId?: number;
            /** @description 号码 */
            number?: string;
            /** @description IMSI号码 */
            imsi?: string;
            /** @description ICCID */
            iccid?: string;
        };
        CommonResultSimCardType: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardType"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageSimCardType: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageSimCardType"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageSimCardType: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["SimCardType"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListSimCardType: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardType"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultSupplier: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["Supplier"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageSupplier: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageSupplier"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageSupplier: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["Supplier"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListSupplier: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["Supplier"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultSimCardSpecification: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardSpecification"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageSimCardSpecification: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageSimCardSpecification"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageSimCardSpecification: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["SimCardSpecification"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListSimCardSpecification: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardSpecification"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultOrganizationDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["OrganizationDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultListOrganizationTreeVO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["OrganizationTreeVO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        OrganizationTreeVO: {
            /** Format: int64 */
            id?: number;
            name?: string;
            code?: string;
            /** Format: int32 */
            type?: number;
            typeName?: string;
            /** Format: int64 */
            parentId?: number;
            contactPerson?: string;
            contactPhone?: string;
            /** Format: int32 */
            status?: number;
            statusName?: string;
            /** Format: date-time */
            createTime?: string;
        };
        OrganizationQuery: {
            /** Format: int32 */
            pageNum?: number;
            /** Format: int32 */
            pageSize?: number;
            orderByColumn?: string;
            isAsc?: string;
            name?: string;
            code?: string;
            /** Format: int32 */
            type?: number;
            /** Format: int64 */
            parentId?: number;
            contactPerson?: string;
            contactPhone?: string;
            /** Format: int32 */
            status?: number;
            beginDate?: string;
            endDate?: string;
        };
        CommonResultPageResultOrganizationDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultOrganizationDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultOrganizationDTO: {
            list?: components["schemas"]["OrganizationDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultSimCardOperationDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardOperationDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardOperationDTO: {
            /** Format: int64 */
            id?: number;
            /** Format: int64 */
            cardId?: number;
            iccid?: string;
            /** Format: int32 */
            operationType?: number;
            operationTypeName?: string;
            /** Format: date-time */
            operationTime?: string;
            /** Format: int64 */
            operatorUserId?: number;
            operatorUserName?: string;
            /** Format: int32 */
            oldStatus?: number;
            oldStatusName?: string;
            /** Format: int32 */
            newStatus?: number;
            newStatusName?: string;
            /** Format: int64 */
            stockOutOrgId?: number;
            stockOutOrgName?: string;
            /** Format: int64 */
            stockInOrgId?: number;
            stockInOrgName?: string;
            remark?: string;
            /** Format: int32 */
            resultStatus?: number;
            resultStatusName?: string;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
        };
        CommonResultListSimCardOperationDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardOperationDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultPageResultSimCardOperationDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultSimCardOperationDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultSimCardOperationDTO: {
            list?: components["schemas"]["SimCardOperationDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListObject: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: Record<string, never>[];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultSimCardInventoryAlertDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardInventoryAlertDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardInventoryAlertQuery: {
            /** Format: int32 */
            pageNum?: number;
            /** Format: int32 */
            pageSize?: number;
            orderByColumn?: string;
            isAsc?: string;
            name?: string;
            /** Format: int64 */
            cardTypeId?: number;
            /** Format: int64 */
            specId?: number;
            /** Format: int64 */
            supplierId?: number;
            /** Format: int64 */
            orgId?: number;
            /** Format: int32 */
            alertType?: number;
            /** Format: int32 */
            isActive?: number;
            beginDate?: string;
            endDate?: string;
        };
        CommonResultPageResultSimCardInventoryAlertDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultSimCardInventoryAlertDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultSimCardInventoryAlertDTO: {
            list?: components["schemas"]["SimCardInventoryAlertDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultSimCardInventoryAlertLogDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardInventoryAlertLogDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardInventoryAlertLogDTO: {
            /** Format: int64 */
            id?: number;
            /** Format: int64 */
            alertId?: number;
            alertName?: string;
            /** Format: date-time */
            alertTime?: string;
            /** Format: int64 */
            cardTypeId?: number;
            cardTypeName?: string;
            /** Format: int64 */
            specId?: number;
            specName?: string;
            /** Format: int64 */
            supplierId?: number;
            supplierName?: string;
            /** Format: int64 */
            orgId?: number;
            orgName?: string;
            /** Format: int32 */
            currentCount?: number;
            /** Format: int32 */
            threshold?: number;
            /** Format: int32 */
            alertType?: number;
            alertTypeName?: string;
            /** Format: int32 */
            notifyStatus?: number;
            notifyStatusName?: string;
            /** Format: date-time */
            notifyTime?: string;
            remark?: string;
        };
        CommonResultListSimCardInventoryAlertLogDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardInventoryAlertLogDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardInventoryAlertLogQuery: {
            /** Format: int32 */
            pageNum?: number;
            /** Format: int32 */
            pageSize?: number;
            orderByColumn?: string;
            isAsc?: string;
            /** Format: int64 */
            alertId?: number;
            /** Format: int64 */
            cardTypeId?: number;
            /** Format: int64 */
            specId?: number;
            /** Format: int64 */
            supplierId?: number;
            /** Format: int64 */
            orgId?: number;
            /** Format: int32 */
            alertType?: number;
            /** Format: int32 */
            notifyStatus?: number;
            beginDate?: string;
            endDate?: string;
        };
        CommonResultPageResultSimCardInventoryAlertLogDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultSimCardInventoryAlertLogDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultSimCardInventoryAlertLogDTO: {
            list?: components["schemas"]["SimCardInventoryAlertLogDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListSimCardInventoryAlertDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardInventoryAlertDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultImsiResourceDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["ImsiResourceDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description IMSI资源查询条件 */
        ImsiResourceQuery: {
            /** @description IMSI号码 */
            imsi?: string;
            /**
             * Format: int32
             * @description IMSI类型
             */
            imsiType?: number;
            /**
             * Format: int64
             * @description 所属组ID
             */
            groupId?: number;
            /**
             * Format: int64
             * @description 供应商ID
             */
            supplierId?: number;
            /**
             * Format: int32
             * @description 状态
             */
            status?: number;
            /**
             * Format: int32
             * @description 页码
             */
            pageNum?: number;
            /**
             * Format: int32
             * @description 每页数量
             */
            pageSize?: number;
        };
        CommonResultPageResultImsiResourceDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultImsiResourceDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultImsiResourceDTO: {
            list?: components["schemas"]["ImsiResourceDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultImsiGroupDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["ImsiGroupDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description IMSI组查询条件 */
        ImsiGroupQuery: {
            /** @description 组名称 */
            groupName?: string;
            /** @description IMSI前缀 */
            imsiPrefix?: string;
            /**
             * Format: int32
             * @description IMSI类型
             */
            imsiType?: number;
            /**
             * Format: int32
             * @description 页码
             */
            pageNum?: number;
            /**
             * Format: int32
             * @description 每页数量
             */
            pageSize?: number;
        };
        CommonResultPageResultImsiGroupDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultImsiGroupDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultImsiGroupDTO: {
            list?: components["schemas"]["ImsiGroupDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListImsiGroupDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["ImsiGroupDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultSimCardDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description SIM卡查询条件 */
        SimCardQuery: {
            /** @description ICCID */
            iccid?: string;
            /** @description IMSI */
            imsi?: string;
            /**
             * Format: int64
             * @description 批次ID
             */
            batchId?: number;
            /**
             * Format: int64
             * @description 组织ID
             */
            orgId?: number;
            /**
             * Format: int32
             * @description 状态：0-未激活，1-已激活，2-使用中，3-已停用，4-已报废
             */
            status?: number;
            /**
             * Format: int64
             * @description 卡类型ID
             */
            cardType?: number;
            /**
             * Format: int32
             * @description 页码
             */
            pageNum?: number;
            /**
             * Format: int32
             * @description 每页数量
             */
            pageSize?: number;
        };
        CommonResultPageResultSimCardDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultSimCardDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultSimCardDTO: {
            list?: components["schemas"]["SimCardDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultSimCardBatchDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardBatchDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        SimCardBatchQuery: {
            /** Format: int32 */
            pageNum?: number;
            /** Format: int32 */
            pageSize?: number;
            orderByColumn?: string;
            isAsc?: string;
            batchName?: string;
            batchCode?: string;
            /** Format: int64 */
            orgId?: number;
            /** Format: int32 */
            status?: number;
            /** Format: int32 */
            alertStatus?: number;
            beginDate?: string;
            endDate?: string;
        };
        CommonResultPageResultSimCardBatchDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultSimCardBatchDTO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultSimCardBatchDTO: {
            list?: components["schemas"]["SimCardBatchDTO"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListSimCardBatchDTO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["SimCardBatchDTO"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultRegion: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["Region"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultListRegion: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["Region"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageRegion: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageRegion"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageRegion: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["Region"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultPageNumberOperationLog: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageNumberOperationLog"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description 号码操作日志信息 */
        NumberOperationLog: {
            /**
             * Format: int64
             * @description 日志ID
             */
            id?: number;
            /**
             * Format: int64
             * @description 号码ID
             */
            numberId?: number;
            /** @description 号码 */
            number?: string;
            /**
             * Format: int32
             * @description 号码类型
             */
            numberType?: number;
            /**
             * Format: int32
             * @description 操作类型：1-创建，2-预留，3-分配，4-激活，5-冻结，6-解冻，7-释放，8-回收
             */
            operationType?: number;
            /**
             * Format: int32
             * @description 原状态：1-空闲，2-预留，3-已分配，4-已激活，5-已使用，6-已冻结，7-已锁定
             */
            oldStatus?: number;
            /**
             * Format: int32
             * @description 新状态：1-空闲，2-预留，3-已分配，4-已激活，5-已使用，6-已冻结，7-已锁定
             */
            newStatus?: number;
            /**
             * Format: date-time
             * @description 操作时间
             */
            operationTime?: string;
            /**
             * Format: int64
             * @description 操作用户ID
             */
            operatorUserId?: number;
            /** @description 费用 */
            charge?: number;
            /** @description 组织名称 */
            orgName?: string;
            /**
             * Format: int32
             * @description 操作结果状态：0-失败，1-成功
             */
            resultStatus?: number;
            /** @description 备注 */
            remark?: string;
        };
        OrderItem: {
            column?: string;
            asc?: boolean;
        };
        PageNumberOperationLog: {
            records?: components["schemas"]["NumberOperationLog"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            current?: number;
            /** @deprecated */
            orders?: components["schemas"]["OrderItem"][];
            /** @deprecated */
            optimizeCountSql?: boolean;
            /** @deprecated */
            searchCount?: boolean;
            optimizeJoinOfCountSql?: boolean;
            /**
             * Format: int64
             * @deprecated
             */
            maxLimit?: number;
            /** @deprecated */
            countId?: string;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListNumberOperationLog: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberOperationLog"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberSegment: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberSegment"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageNumberSegment: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageNumberSegment"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageNumberSegment: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["NumberSegment"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListNumberSegment: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberSegment"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberPattern: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberPattern"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageNumberPattern: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageNumberPattern"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageNumberPattern: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["NumberPattern"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListNumberPattern: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberPattern"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberLevel: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberLevel"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageNumberLevel: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageNumberLevel"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageNumberLevel: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["NumberLevel"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListNumberLevel: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberLevel"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageNumberResourceVO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageNumberResourceVO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageNumberResourceVO: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["NumberResourceVO"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        NumberResourceVO: {
            /** Format: int64 */
            numberId?: number;
            number?: string;
            /** Format: int32 */
            numberType?: number;
            numberTypeName?: string;
            /** Format: int64 */
            segmentId?: number;
            segmentCode?: string;
            /** Format: int64 */
            levelId?: number;
            levelName?: string;
            /** Format: int64 */
            patternId?: number;
            patternName?: string;
            /** Format: int64 */
            hlrId?: number;
            hlrName?: string;
            iccid?: string;
            /** Format: int32 */
            status?: number;
            statusName?: string;
            charge?: number;
            attributiveOrg?: string;
            remark?: string;
            /** Format: date-time */
            createTime?: string;
            /** Format: date-time */
            updateTime?: string;
        };
        CommonResultNumberResourceVO: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberResourceVO"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberResource: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberResource"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description 号码资源信息 */
        NumberResource: {
            /**
             * Format: int64
             * @description 号码ID
             */
            numberId?: number;
            /** @description 号码 */
            number?: string;
            /**
             * Format: int32
             * @description 号码类型：1-固话，2-手机，3-800，4-400，5-VOIP，6-物联网
             */
            numberType?: number;
            /**
             * Format: int64
             * @description 号码段ID
             */
            segmentId?: number;
            /**
             * Format: int64
             * @description 号码级别ID
             */
            levelId?: number;
            /**
             * Format: int64
             * @description 号码模式ID
             */
            patternId?: number;
            /**
             * Format: int64
             * @description HLR/交换机ID
             */
            hlrId?: number;
            /** @description ICCID */
            iccid?: string;
            /**
             * Format: int32
             * @description 状态：1-空闲，2-预留，3-已分配，4-已激活，5-已使用，6-已冻结，7-已锁定
             */
            status?: number;
            /** @description 费用 */
            charge?: number;
            /** @description 归属组织 */
            attributiveOrg?: string;
            /** @description 备注 */
            remark?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建用户ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新用户ID
             */
            updateUserId?: number;
        };
        CommonResultHlrSwitch: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["HlrSwitch"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultIPageHlrSwitch: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["IPageHlrSwitch"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        IPageHlrSwitch: {
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            current?: number;
            records?: components["schemas"]["HlrSwitch"][];
            /** Format: int64 */
            pages?: number;
            /** Format: int64 */
            size?: number;
        };
        CommonResultListHlrSwitch: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["HlrSwitch"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberApproval: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberApproval"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description 号码审批信息 */
        NumberApproval: {
            /**
             * Format: int64
             * @description 审批ID
             */
            approvalId?: number;
            /** @description 审批编号 */
            approvalNo?: string;
            /**
             * Format: int64
             * @description 号码ID
             */
            numberId?: number;
            /** @description 号码 */
            number?: string;
            /**
             * Format: int64
             * @description 申请人ID
             */
            applicantId?: number;
            /** @description 申请人姓名 */
            applicantName?: string;
            /**
             * Format: date-time
             * @description 申请时间
             */
            applyTime?: string;
            /** @description 申请原因 */
            applyReason?: string;
            /** @description 客户信息 */
            customerInfo?: string;
            /**
             * Format: int64
             * @description 号码级别ID
             */
            levelId?: number;
            /**
             * Format: int32
             * @description 审批状态：0-待审批，1-已通过，2-已拒绝，3-已取消
             */
            status?: number;
            /**
             * Format: int64
             * @description 审批人ID
             */
            approverId?: number;
            /** @description 审批人姓名 */
            approverName?: string;
            /**
             * Format: date-time
             * @description 审批时间
             */
            approvalTime?: string;
            /** @description 审批意见 */
            approvalOpinion?: string;
        };
        CommonResultPageNumberApproval: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageNumberApproval"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageNumberApproval: {
            records?: components["schemas"]["NumberApproval"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            current?: number;
            /** @deprecated */
            orders?: components["schemas"]["OrderItem"][];
            /** @deprecated */
            optimizeCountSql?: boolean;
            /** @deprecated */
            searchCount?: boolean;
            optimizeJoinOfCountSql?: boolean;
            /**
             * Format: int64
             * @deprecated
             */
            maxLimit?: number;
            /** @deprecated */
            countId?: string;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultBatchBindingTask: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["BatchBindingTask"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        /** @description 批量绑定详情 */
        BatchBindingDetail: {
            /**
             * Format: int64
             * @description 详情ID
             */
            detailId?: number;
            /**
             * Format: int64
             * @description 任务ID
             */
            taskId?: number;
            /** @description 号码 */
            number?: string;
            /** @description IMSI */
            imsi?: string;
            /** @description ICCID */
            iccid?: string;
            /**
             * Format: int32
             * @description 状态：0-待处理，1-成功，2-失败
             */
            status?: number;
            /** @description 错误信息 */
            errorMsg?: string;
            /**
             * Format: date-time
             * @description 处理时间
             */
            processTime?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int64
             * @description 创建者ID
             */
            createUserId?: number;
            /**
             * Format: int64
             * @description 更新者ID
             */
            updateUserId?: number;
        };
        CommonResultPageResultBatchBindingDetail: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultBatchBindingDetail"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultBatchBindingDetail: {
            list?: components["schemas"]["BatchBindingDetail"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultMapStringInteger: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: {
                [key: string]: number;
            };
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultPageResultBatchBindingTask: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultBatchBindingTask"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultBatchBindingTask: {
            list?: components["schemas"]["BatchBindingTask"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultPageResultNumberImsiBinding: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["PageResultNumberImsiBinding"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        PageResultNumberImsiBinding: {
            list?: components["schemas"]["NumberImsiBinding"][];
            /** Format: int64 */
            total?: number;
            /** Format: int64 */
            pageNum?: number;
            /** Format: int64 */
            pageSize?: number;
            /** Format: int64 */
            pages?: number;
        };
        CommonResultListNumberImsiBinding: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberImsiBinding"][];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultNumberImsiBinding: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: components["schemas"]["NumberImsiBinding"];
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
        CommonResultObject: {
            /** Format: int32 */
            code?: number;
            message?: string;
            data?: Record<string, never>;
            success?: boolean;
            /** Format: int64 */
            timestamp?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardType"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Supplier"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardSpecification"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID */
                id: number;
                /** @description Status: 0-Disabled, 1-Enabled */
                status: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatus_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Configuration ID */
                id: number;
                /** @description Status: 0-Disabled, 1-Enabled */
                isActive: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardInventoryAlertDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateNotifyStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Log ID */
                id: number;
                /** @description Notification Status: 0-Not notified, 1-Notified */
                notifyStatus: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatus_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI ID */
                imsiId: number;
                /** @description 状态：1-空闲，2-已绑定，3-已使用，4-已锁定 */
                status: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateByImsi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI号码 */
                imsi: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatusByImsi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI号码 */
                imsi: string;
                /** @description 状态：1-空闲，2-已绑定，3-已使用，4-已锁定 */
                status: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    batchUpdateStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 状态：1-空闲，2-已绑定，3-已使用，4-已锁定 */
                status: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiGroupDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatus_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                status: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    deactivateCard: {
        parameters: {
            query: {
                operatorUserId: number;
            };
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    activateCard: {
        parameters: {
            query: {
                operatorUserId: number;
            };
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    update_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateStatus_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch ID */
                id: number;
                /** @description Batch Status: 0-Normal, 1-Disabled */
                status: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_8: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardBatchDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    updateAvailableCount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardBatchDTO"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_9: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Region"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    enable: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 区域ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    disable: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 区域ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_10: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberSegment"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    updateNumberCount: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段ID */
                segmentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    enable_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段ID */
                segmentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    disable_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段ID */
                segmentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_11: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberPattern"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    enable_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 模式ID */
                patternId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    disable_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 模式ID */
                patternId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_12: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberLevel"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    enable_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别ID */
                levelId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    disable_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别ID */
                levelId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    unfreeze: {
        parameters: {
            query?: {
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    reserve: {
        parameters: {
            query?: {
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    release: {
        parameters: {
            query?: {
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    recycle: {
        parameters: {
            query?: {
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    freeze: {
        parameters: {
            query?: {
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    assign: {
        parameters: {
            query: {
                /** @description 归属组织 */
                attributiveOrg: string;
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    activate: {
        parameters: {
            query?: {
                /** @description ICCID */
                iccid?: string;
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    update_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    batchOperation: {
        parameters: {
            query: {
                /** @description 操作类型：1-创建，2-预留，3-分配，4-激活，5-冻结，6-解冻，7-释放，8-回收, 10-删除 */
                operationType: number;
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    update_14: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HlrSwitch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    enable_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机ID */
                hlrId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    disable_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机ID */
                hlrId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    reject: {
        parameters: {
            query: {
                /** @description 审批人ID */
                approverId: number;
                /** @description 审批人姓名 */
                approverName: string;
                /** @description 审批意见 */
                approvalOpinion?: string;
            };
            header?: never;
            path: {
                /** @description 审批ID */
                approvalId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    cancel: {
        parameters: {
            query?: {
                /** @description 取消原因 */
                cancelReason?: string;
            };
            header?: never;
            path: {
                /** @description 审批ID */
                approvalId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    approve: {
        parameters: {
            query: {
                /** @description 审批人ID */
                approverId: number;
                /** @description 审批人姓名 */
                approverName: string;
                /** @description 审批意见 */
                approvalOpinion?: string;
            };
            header?: never;
            path: {
                /** @description 审批ID */
                approvalId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    retryTask: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    cancelTask: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    updateTask: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchBindingTask"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardType"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Supplier"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardSpecification"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    countByOperationType: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardOperationQuery"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    countByResultStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardOperationQuery"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    checkInventory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultString"];
                };
            };
        };
    };
    add_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardInventoryAlertDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    generate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiGenerateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListImsiResourceDTO"];
                };
            };
        };
    };
    add_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImsiGroupDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    recycleCards: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: Record<string, never>;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    importCards: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardDTO"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    allocateCards: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: Record<string, never>;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    add_8: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SimCardBatchDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    add_9: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Region"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    add_10: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberSegment"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    add_11: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberPattern"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    add_12: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberLevel"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    importFromExcel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: binary
                     * @description Excel文件
                     */
                    file: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultString"];
                };
            };
        };
    };
    add_13: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberResourceDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    add_14: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HlrSwitch"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    applyNumber: {
        parameters: {
            query: {
                /** @description 号码ID */
                numberId: number;
                /** @description 申请人ID */
                applicantId: number;
                /** @description 申请人姓名 */
                applicantName: string;
                /** @description 申请原因 */
                applyReason?: string;
                /** @description 客户信息 */
                customerInfo?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultLong"];
                };
            };
        };
    };
    stopTask: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    startTask: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    createUnbindTask: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    task: components["schemas"]["BatchBindingTask"];
                    /**
                     * Format: binary
                     * @description Excel文件
                     */
                    file: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    testTransaction: {
        parameters: {
            query?: {
                /** @description 是否抛出异常进行回滚测试 */
                throwException?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultString"];
                };
            };
        };
    };
    createTask: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    task: components["schemas"]["BatchBindingTask"];
                    /**
                     * Format: binary
                     * @description Excel文件
                     */
                    file: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    unbind: {
        parameters: {
            query: {
                /** @description 操作用户ID */
                operatorUserId: number;
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path: {
                /** @description 绑定ID */
                bindingId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    bind: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberImsiBinding"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    batchUnbind: {
        parameters: {
            query: {
                /** @description 操作用户ID */
                operatorUserId: number;
                /** @description 备注 */
                remark?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    batchUnbindV2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BatchUnbindRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    batchBind: {
        parameters: {
            query: {
                /** @description 操作用户ID */
                operatorUserId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NumberImsiBinding"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    triggerNotificationProcessing: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultString"];
                };
            };
        };
    };
    triggerAlertCheck: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultString"];
                };
            };
        };
    };
    retryFailedNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    processPendingNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    checkInventoryAndGenerateAlerts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    getDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Type ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardType"];
                };
            };
        };
    };
    delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Type ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page: {
        parameters: {
            query?: {
                /** @description Page Number */
                page?: number;
                /** @description Page Size */
                size?: number;
                /** @description Type Name */
                typeName?: string;
                /** @description Type Code */
                typeCode?: string;
                /** @description Type Status: 0-Disabled, 1-Enabled */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageSimCardType"];
                };
            };
        };
    };
    listAllEnabled: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardType"];
                };
            };
        };
    };
    getDetail_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Supplier ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSupplier"];
                };
            };
        };
    };
    delete_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Supplier ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_1: {
        parameters: {
            query?: {
                /** @description Page Number */
                page?: number;
                /** @description Page Size */
                size?: number;
                /** @description Supplier Name */
                supplierName?: string;
                /** @description Supplier Code */
                supplierCode?: string;
                /** @description Status */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageSupplier"];
                };
            };
        };
    };
    listAllEnabled_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSupplier"];
                };
            };
        };
    };
    getDetail_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Specification ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardSpecification"];
                };
            };
        };
    };
    delete_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Specification ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_2: {
        parameters: {
            query?: {
                /** @description Page Number */
                page?: number;
                /** @description Page Size */
                size?: number;
                /** @description Specification Name */
                specName?: string;
                /** @description Specification Code */
                specCode?: string;
                /** @description Type ID */
                typeId?: number;
                /** @description Specification Status: 0-Disabled, 1-Enabled */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageSimCardSpecification"];
                };
            };
        };
    };
    listAllEnabled_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardSpecification"];
                };
            };
        };
    };
    listByTypeId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Type ID */
                typeId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardSpecification"];
                };
            };
        };
    };
    getDetail_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultOrganizationDTO"];
                };
            };
        };
    };
    delete_3: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    getTree: {
        parameters: {
            query?: {
                /** @description Parent Organization ID */
                parentId?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListOrganizationTreeVO"];
                };
            };
        };
    };
    page_3: {
        parameters: {
            query: {
                query: components["schemas"]["OrganizationQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultOrganizationDTO"];
                };
            };
        };
    };
    getByCode: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization Code */
                code: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultOrganizationDTO"];
                };
            };
        };
    };
    getDetail_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Operation Record ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardOperationDTO"];
                };
            };
        };
    };
    getRecentOperations: {
        parameters: {
            query?: {
                /** @description Quantity limit */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardOperationDTO"];
                };
            };
        };
    };
    page_4: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardOperationQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultSimCardOperationDTO"];
                };
            };
        };
    };
    getOperationsByIccid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ICCID */
                iccid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardOperationDTO"];
                };
            };
        };
    };
    countByOperationType_1: {
        parameters: {
            query?: {
                /** @description Start date */
                beginDate?: string;
                /** @description End date */
                endDate?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListObject"];
                };
            };
        };
    };
    getOperationsByCardId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description SIM Card ID */
                cardId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardOperationDTO"];
                };
            };
        };
    };
    getDetail_5: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Configuration ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardInventoryAlertDTO"];
                };
            };
        };
    };
    delete_4: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Configuration ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_5: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardInventoryAlertQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultSimCardInventoryAlertDTO"];
                };
            };
        };
    };
    getDetail_6: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Log ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardInventoryAlertLogDTO"];
                };
            };
        };
    };
    getRecentLogs: {
        parameters: {
            query?: {
                /** @description Quantity limit */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardInventoryAlertLogDTO"];
                };
            };
        };
    };
    page_6: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardInventoryAlertLogQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultSimCardInventoryAlertLogDTO"];
                };
            };
        };
    };
    countUnnotifiedLogs: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    getLogsByAlertId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Alert Configuration ID */
                alertId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardInventoryAlertLogDTO"];
                };
            };
        };
    };
    listActive: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardInventoryAlertDTO"];
                };
            };
        };
    };
    getDetail_7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI ID */
                imsiId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultImsiResourceDTO"];
                };
            };
        };
    };
    delete_5: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI ID */
                imsiId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_7: {
        parameters: {
            query: {
                query: components["schemas"]["ImsiResourceQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultImsiResourceDTO"];
                };
            };
        };
    };
    getByImsi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI号码 */
                imsi: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultImsiResourceDTO"];
                };
            };
        };
    };
    deleteByImsi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI号码 */
                imsi: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    listByGroupId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 组ID */
                groupId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListImsiResourceDTO"];
                };
            };
        };
    };
    countAvailable: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 组ID */
                groupId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultInteger"];
                };
            };
        };
    };
    getDetail_8: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                groupId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultImsiGroupDTO"];
                };
            };
        };
    };
    delete_6: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                groupId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_8: {
        parameters: {
            query: {
                query: components["schemas"]["ImsiGroupQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultImsiGroupDTO"];
                };
            };
        };
    };
    list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListImsiGroupDTO"];
                };
            };
        };
    };
    getDetail_9: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardDTO"];
                };
            };
        };
    };
    delete_7: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
    page_9: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultSimCardDTO"];
                };
            };
        };
    };
    getByIccid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                iccid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardDTO"];
                };
            };
        };
    };
    countByCardType: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    countByStatus: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    countByOrganization: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    getById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultSimCardBatchDTO"];
                };
            };
        };
    };
    delete_8: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Batch ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    page_10: {
        parameters: {
            query: {
                query: components["schemas"]["SimCardBatchQuery"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultSimCardBatchDTO"];
                };
            };
        };
    };
    list_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardBatchDTO"];
                };
            };
        };
    };
    listAlerts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardBatchDTO"];
                };
            };
        };
    };
    getDetail_10: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 地区ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultRegion"];
                };
            };
        };
    };
    delete_9: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 区域ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    listRegionTree: {
        parameters: {
            query?: {
                /** @description 父区域ID */
                parentId?: number;
                /** @description 区域类型 */
                regionType?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListRegion"];
                };
            };
        };
    };
    page_11: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页条数 */
                size?: number;
                /** @description 区域代码 */
                regionCode?: string;
                /** @description 区域名称 */
                regionName?: string;
                /** @description 区域类型 */
                regionType?: number;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageRegion"];
                };
            };
        };
    };
    listByParentId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 父区域ID */
                parentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListRegion"];
                };
            };
        };
    };
    listAllEnabled_3: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListRegion"];
                };
            };
        };
    };
    getStatistics: {
        parameters: {
            query?: {
                /** @description 开始时间 */
                beginTime?: string;
                /** @description 结束时间 */
                endTime?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    page_12: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页记录数 */
                size?: number;
                /** @description 号码 */
                number?: string;
                /** @description 号码类型 */
                numberType?: number;
                /** @description 操作类型 */
                operationType?: number;
                /** @description 操作用户ID */
                operatorUserId?: number;
                /** @description 开始时间 */
                beginTime?: string;
                /** @description 结束时间 */
                endTime?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageNumberOperationLog"];
                };
            };
        };
    };
    listByNumberId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码ID */
                numberId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberOperationLog"];
                };
            };
        };
    };
    pageByNumber: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页记录数 */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageNumberOperationLog"];
                };
            };
        };
    };
    getDetail_11: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段ID */
                segmentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberSegment"];
                };
            };
        };
    };
    delete_10: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段ID */
                segmentId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    page_13: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页条数 */
                size?: number;
                /** @description 号码段代码 */
                segmentCode?: string;
                /** @description 号码段类型 */
                segmentType?: number;
                /** @description 区域ID */
                regionId?: number;
                /** @description HLR/交换机ID */
                hlrSwitchId?: number;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageNumberSegment"];
                };
            };
        };
    };
    listByType: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段类型 */
                segmentType: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberSegment"];
                };
            };
        };
    };
    listByRegionId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 区域ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberSegment"];
                };
            };
        };
    };
    listByHlrSwitchId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机ID */
                hlrSwitchId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberSegment"];
                };
            };
        };
    };
    listByConditions: {
        parameters: {
            query?: {
                /** @description 号码段类型 */
                segmentType?: number;
                /** @description 区域ID */
                regionId?: number;
                /** @description HLR/交换机ID */
                hlrSwitchId?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberSegment"];
                };
            };
        };
    };
    listAllEnabled_4: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberSegment"];
                };
            };
        };
    };
    getBySegmentCode: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码段代码 */
                segmentCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberSegment"];
                };
            };
        };
    };
    getDetail_12: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 模式ID */
                patternId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberPattern"];
                };
            };
        };
    };
    delete_11: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 模式ID */
                patternId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    validateNumber: {
        parameters: {
            query: {
                /** @description 号码 */
                number: string;
                /** @description 模式ID */
                patternId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    page_14: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页条数 */
                size?: number;
                /** @description 模式名称 */
                patternName?: string;
                /** @description 级别ID */
                levelId?: number;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageNumberPattern"];
                };
            };
        };
    };
    listByLevelId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别ID */
                levelId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberPattern"];
                };
            };
        };
    };
    listAllEnabled_5: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberPattern"];
                };
            };
        };
    };
    getDetail_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别ID */
                levelId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberLevel"];
                };
            };
        };
    };
    delete_12: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别ID */
                levelId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    page_15: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页条数 */
                size?: number;
                /** @description 级别名称 */
                levelName?: string;
                /** @description 级别代码 */
                levelCode?: string;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageNumberLevel"];
                };
            };
        };
    };
    listNeedApproval: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberLevel"];
                };
            };
        };
    };
    listAllEnabled_6: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberLevel"];
                };
            };
        };
    };
    getByLevelCode: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 级别代码 */
                levelCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberLevel"];
                };
            };
        };
    };
    getStatistics_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    page_16: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页记录数 */
                size?: number;
                /** @description 号码 */
                number?: string;
                /** @description 号码类型 */
                numberType?: number;
                /** @description 号码段ID */
                segmentId?: number;
                /** @description 号码级别ID */
                levelId?: number;
                /** @description 号码模式ID */
                patternId?: number;
                /** @description HLR交换机ID */
                hlrSwitchId?: number;
                /** @description 归属机构 */
                attributiveOrg?: string;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageNumberResourceVO"];
                };
            };
        };
    };
    exportToExcel: {
        parameters: {
            query: {
                queryParams: components["schemas"]["NumberResourceDTO"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    downloadTemplate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    detail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberResourceVO"];
                };
            };
        };
    };
    getBasicInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberResource"];
                };
            };
        };
    };
    getDetail_14: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机ID */
                hlrId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultHlrSwitch"];
                };
            };
        };
    };
    delete_14: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机ID */
                hlrId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    page_17: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页条数 */
                size?: number;
                /** @description HLR/交换机名称 */
                hlrName?: string;
                /** @description HLR/交换机代码 */
                hlrCode?: string;
                /** @description HLR/交换机类型 */
                hlrType?: number;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultIPageHlrSwitch"];
                };
            };
        };
    };
    listByType_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description HLR/交换机类型 */
                hlrType: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListHlrSwitch"];
                };
            };
        };
    };
    listByRegionId_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 区域ID */
                regionId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListHlrSwitch"];
                };
            };
        };
    };
    listAllEnabled_7: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListHlrSwitch"];
                };
            };
        };
    };
    getDetail_15: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 审批ID */
                approvalId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberApproval"];
                };
            };
        };
    };
    page_18: {
        parameters: {
            query?: {
                /** @description 页码 */
                current?: number;
                /** @description 每页记录数 */
                size?: number;
                /** @description 号码 */
                number?: string;
                /** @description 审批编号 */
                approvalNo?: string;
                /** @description 申请人姓名 */
                applicantName?: string;
                /** @description 号码级别ID */
                levelId?: number;
                /** @description 状态 */
                status?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageNumberApproval"];
                };
            };
        };
    };
    getByApprovalNo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 审批编号 */
                approvalNo: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberApproval"];
                };
            };
        };
    };
    getTaskDetail: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBatchBindingTask"];
                };
            };
        };
    };
    pageDetail: {
        parameters: {
            query?: {
                /** @description 状态：0-待处理，1-成功，2-失败 */
                status?: number;
                /** @description 页码 */
                pageNum?: number;
                /** @description 每页数量 */
                pageSize?: number;
            };
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultBatchBindingDetail"];
                };
            };
        };
    };
    countDetailStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID */
                taskId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringInteger"];
                };
            };
        };
    };
    page_19: {
        parameters: {
            query?: {
                /** @description 任务名称 */
                taskName?: string;
                /** @description 任务状态：0-待处理，1-处理中，2-已完成，3-已失败 */
                status?: number;
                /** @description 页码 */
                pageNum?: number;
                /** @description 每页数量 */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultBatchBindingTask"];
                };
            };
        };
    };
    page_20: {
        parameters: {
            query?: {
                /** @description 号码 */
                number?: string;
                /** @description IMSI号码 */
                imsi?: string;
                /** @description 绑定状态：1-已绑定，2-已解绑 */
                bindingStatus?: number;
                /** @description 页码 */
                pageNum?: number;
                /** @description 每页数量 */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultPageResultNumberImsiBinding"];
                };
            };
        };
    };
    countBindings: {
        parameters: {
            query?: {
                /** @description 号码 */
                number?: string;
                /** @description IMSI号码 */
                imsi?: string;
                /** @description 绑定状态：1-已绑定，2-已解绑 */
                bindingStatus?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultMapStringObject"];
                };
            };
        };
    };
    getByOrderId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 订单ID */
                orderId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListNumberImsiBinding"];
                };
            };
        };
    };
    getByNumber: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberImsiBinding"];
                };
            };
        };
    };
    getByImsi_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description IMSI号码 */
                imsi: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultNumberImsiBinding"];
                };
            };
        };
    };
    getAlertSystemStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultObject"];
                };
            };
        };
    };
    list_2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultListSimCardInventoryAlertDTO"];
                };
            };
        };
    };
    delete_13: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 号码 */
                number: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultBoolean"];
                };
            };
        };
    };
    deleteTasks: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 任务ID列表，多个ID用逗号分隔 */
                taskIds: number[];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CommonResultVoid"];
                };
            };
        };
    };
}
