/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticationRouteImport } from './routes/_authentication'
import { Route as R403RouteImport } from './routes/403'
import { Route as AuthenticationSimCardSupplierRouteImport } from './routes/_authentication/sim-card/supplier'
import { Route as AuthenticationSimCardSpecificationRouteImport } from './routes/_authentication/sim-card/specification'
import { Route as AuthenticationSimCardResourceRouteImport } from './routes/_authentication/sim-card/resource'
import { Route as AuthenticationSimCardOrganizationRouteImport } from './routes/_authentication/sim-card/organization'
import { Route as AuthenticationSimCardCardTypeRouteImport } from './routes/_authentication/sim-card/card-type'
import { Route as AuthenticationSimCardCardBatchRouteImport } from './routes/_authentication/sim-card/card-batch'
import { Route as AuthenticationSimCardCardAlertRouteImport } from './routes/_authentication/sim-card/card-alert'
import { Route as AuthenticationNumberSegmentRouteImport } from './routes/_authentication/number/segment'
import { Route as AuthenticationNumberResourceRouteImport } from './routes/_authentication/number/resource'
import { Route as AuthenticationNumberRegionRouteImport } from './routes/_authentication/number/region'
import { Route as AuthenticationNumberPatternRouteImport } from './routes/_authentication/number/pattern'
import { Route as AuthenticationNumberLevelRouteImport } from './routes/_authentication/number/level'
import { Route as AuthenticationNumberHlrRouteImport } from './routes/_authentication/number/hlr'
import { Route as AuthenticationImsiSupplierRouteImport } from './routes/_authentication/imsi/supplier'
import { Route as AuthenticationImsiResourceRouteImport } from './routes/_authentication/imsi/resource'
import { Route as AuthenticationImsiGroupRouteImport } from './routes/_authentication/imsi/group'
import { Route as AuthenticationIframeNameRouteImport } from './routes/_authentication/iframe/$name'
import { Route as AuthenticationBusinessCardSelectionRouteImport } from './routes/_authentication/business/card-selection'
import { Route as AuthenticationDashboardDashboardRouteImport } from './routes/_authentication/_dashboard/dashboard'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationRoute = AuthenticationRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const R403Route = R403RouteImport.update({
  id: '/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationSimCardSupplierRoute =
  AuthenticationSimCardSupplierRouteImport.update({
    id: '/sim-card/supplier',
    path: '/sim-card/supplier',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardSpecificationRoute =
  AuthenticationSimCardSpecificationRouteImport.update({
    id: '/sim-card/specification',
    path: '/sim-card/specification',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardResourceRoute =
  AuthenticationSimCardResourceRouteImport.update({
    id: '/sim-card/resource',
    path: '/sim-card/resource',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardOrganizationRoute =
  AuthenticationSimCardOrganizationRouteImport.update({
    id: '/sim-card/organization',
    path: '/sim-card/organization',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardCardTypeRoute =
  AuthenticationSimCardCardTypeRouteImport.update({
    id: '/sim-card/card-type',
    path: '/sim-card/card-type',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardCardBatchRoute =
  AuthenticationSimCardCardBatchRouteImport.update({
    id: '/sim-card/card-batch',
    path: '/sim-card/card-batch',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationSimCardCardAlertRoute =
  AuthenticationSimCardCardAlertRouteImport.update({
    id: '/sim-card/card-alert',
    path: '/sim-card/card-alert',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberSegmentRoute =
  AuthenticationNumberSegmentRouteImport.update({
    id: '/number/segment',
    path: '/number/segment',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberResourceRoute =
  AuthenticationNumberResourceRouteImport.update({
    id: '/number/resource',
    path: '/number/resource',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberRegionRoute =
  AuthenticationNumberRegionRouteImport.update({
    id: '/number/region',
    path: '/number/region',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberPatternRoute =
  AuthenticationNumberPatternRouteImport.update({
    id: '/number/pattern',
    path: '/number/pattern',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberLevelRoute =
  AuthenticationNumberLevelRouteImport.update({
    id: '/number/level',
    path: '/number/level',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationNumberHlrRoute = AuthenticationNumberHlrRouteImport.update({
  id: '/number/hlr',
  path: '/number/hlr',
  getParentRoute: () => AuthenticationRoute,
} as any)
const AuthenticationImsiSupplierRoute =
  AuthenticationImsiSupplierRouteImport.update({
    id: '/imsi/supplier',
    path: '/imsi/supplier',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationImsiResourceRoute =
  AuthenticationImsiResourceRouteImport.update({
    id: '/imsi/resource',
    path: '/imsi/resource',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationImsiGroupRoute = AuthenticationImsiGroupRouteImport.update({
  id: '/imsi/group',
  path: '/imsi/group',
  getParentRoute: () => AuthenticationRoute,
} as any)
const AuthenticationIframeNameRoute =
  AuthenticationIframeNameRouteImport.update({
    id: '/iframe/$name',
    path: '/iframe/$name',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationBusinessCardSelectionRoute =
  AuthenticationBusinessCardSelectionRouteImport.update({
    id: '/business/card-selection',
    path: '/business/card-selection',
    getParentRoute: () => AuthenticationRoute,
  } as any)
const AuthenticationDashboardDashboardRoute =
  AuthenticationDashboardDashboardRouteImport.update({
    id: '/_dashboard/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticationRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/403': typeof R403Route
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/business/card-selection': typeof AuthenticationBusinessCardSelectionRoute
  '/iframe/$name': typeof AuthenticationIframeNameRoute
  '/imsi/group': typeof AuthenticationImsiGroupRoute
  '/imsi/resource': typeof AuthenticationImsiResourceRoute
  '/imsi/supplier': typeof AuthenticationImsiSupplierRoute
  '/number/hlr': typeof AuthenticationNumberHlrRoute
  '/number/level': typeof AuthenticationNumberLevelRoute
  '/number/pattern': typeof AuthenticationNumberPatternRoute
  '/number/region': typeof AuthenticationNumberRegionRoute
  '/number/resource': typeof AuthenticationNumberResourceRoute
  '/number/segment': typeof AuthenticationNumberSegmentRoute
  '/sim-card/card-alert': typeof AuthenticationSimCardCardAlertRoute
  '/sim-card/card-batch': typeof AuthenticationSimCardCardBatchRoute
  '/sim-card/card-type': typeof AuthenticationSimCardCardTypeRoute
  '/sim-card/organization': typeof AuthenticationSimCardOrganizationRoute
  '/sim-card/resource': typeof AuthenticationSimCardResourceRoute
  '/sim-card/specification': typeof AuthenticationSimCardSpecificationRoute
  '/sim-card/supplier': typeof AuthenticationSimCardSupplierRoute
}
export interface FileRoutesByTo {
  '/403': typeof R403Route
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/business/card-selection': typeof AuthenticationBusinessCardSelectionRoute
  '/iframe/$name': typeof AuthenticationIframeNameRoute
  '/imsi/group': typeof AuthenticationImsiGroupRoute
  '/imsi/resource': typeof AuthenticationImsiResourceRoute
  '/imsi/supplier': typeof AuthenticationImsiSupplierRoute
  '/number/hlr': typeof AuthenticationNumberHlrRoute
  '/number/level': typeof AuthenticationNumberLevelRoute
  '/number/pattern': typeof AuthenticationNumberPatternRoute
  '/number/region': typeof AuthenticationNumberRegionRoute
  '/number/resource': typeof AuthenticationNumberResourceRoute
  '/number/segment': typeof AuthenticationNumberSegmentRoute
  '/sim-card/card-alert': typeof AuthenticationSimCardCardAlertRoute
  '/sim-card/card-batch': typeof AuthenticationSimCardCardBatchRoute
  '/sim-card/card-type': typeof AuthenticationSimCardCardTypeRoute
  '/sim-card/organization': typeof AuthenticationSimCardOrganizationRoute
  '/sim-card/resource': typeof AuthenticationSimCardResourceRoute
  '/sim-card/specification': typeof AuthenticationSimCardSpecificationRoute
  '/sim-card/supplier': typeof AuthenticationSimCardSupplierRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/403': typeof R403Route
  '/_authentication': typeof AuthenticationRouteWithChildren
  '/login': typeof LoginRoute
  '/_authentication/_dashboard/dashboard': typeof AuthenticationDashboardDashboardRoute
  '/_authentication/business/card-selection': typeof AuthenticationBusinessCardSelectionRoute
  '/_authentication/iframe/$name': typeof AuthenticationIframeNameRoute
  '/_authentication/imsi/group': typeof AuthenticationImsiGroupRoute
  '/_authentication/imsi/resource': typeof AuthenticationImsiResourceRoute
  '/_authentication/imsi/supplier': typeof AuthenticationImsiSupplierRoute
  '/_authentication/number/hlr': typeof AuthenticationNumberHlrRoute
  '/_authentication/number/level': typeof AuthenticationNumberLevelRoute
  '/_authentication/number/pattern': typeof AuthenticationNumberPatternRoute
  '/_authentication/number/region': typeof AuthenticationNumberRegionRoute
  '/_authentication/number/resource': typeof AuthenticationNumberResourceRoute
  '/_authentication/number/segment': typeof AuthenticationNumberSegmentRoute
  '/_authentication/sim-card/card-alert': typeof AuthenticationSimCardCardAlertRoute
  '/_authentication/sim-card/card-batch': typeof AuthenticationSimCardCardBatchRoute
  '/_authentication/sim-card/card-type': typeof AuthenticationSimCardCardTypeRoute
  '/_authentication/sim-card/organization': typeof AuthenticationSimCardOrganizationRoute
  '/_authentication/sim-card/resource': typeof AuthenticationSimCardResourceRoute
  '/_authentication/sim-card/specification': typeof AuthenticationSimCardSpecificationRoute
  '/_authentication/sim-card/supplier': typeof AuthenticationSimCardSupplierRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/403'
    | '/login'
    | '/dashboard'
    | '/business/card-selection'
    | '/iframe/$name'
    | '/imsi/group'
    | '/imsi/resource'
    | '/imsi/supplier'
    | '/number/hlr'
    | '/number/level'
    | '/number/pattern'
    | '/number/region'
    | '/number/resource'
    | '/number/segment'
    | '/sim-card/card-alert'
    | '/sim-card/card-batch'
    | '/sim-card/card-type'
    | '/sim-card/organization'
    | '/sim-card/resource'
    | '/sim-card/specification'
    | '/sim-card/supplier'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/403'
    | '/login'
    | '/dashboard'
    | '/business/card-selection'
    | '/iframe/$name'
    | '/imsi/group'
    | '/imsi/resource'
    | '/imsi/supplier'
    | '/number/hlr'
    | '/number/level'
    | '/number/pattern'
    | '/number/region'
    | '/number/resource'
    | '/number/segment'
    | '/sim-card/card-alert'
    | '/sim-card/card-batch'
    | '/sim-card/card-type'
    | '/sim-card/organization'
    | '/sim-card/resource'
    | '/sim-card/specification'
    | '/sim-card/supplier'
  id:
    | '__root__'
    | '/403'
    | '/_authentication'
    | '/login'
    | '/_authentication/_dashboard/dashboard'
    | '/_authentication/business/card-selection'
    | '/_authentication/iframe/$name'
    | '/_authentication/imsi/group'
    | '/_authentication/imsi/resource'
    | '/_authentication/imsi/supplier'
    | '/_authentication/number/hlr'
    | '/_authentication/number/level'
    | '/_authentication/number/pattern'
    | '/_authentication/number/region'
    | '/_authentication/number/resource'
    | '/_authentication/number/segment'
    | '/_authentication/sim-card/card-alert'
    | '/_authentication/sim-card/card-batch'
    | '/_authentication/sim-card/card-type'
    | '/_authentication/sim-card/organization'
    | '/_authentication/sim-card/resource'
    | '/_authentication/sim-card/specification'
    | '/_authentication/sim-card/supplier'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  R403Route: typeof R403Route
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/403': {
      id: '/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof R403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authentication/sim-card/supplier': {
      id: '/_authentication/sim-card/supplier'
      path: '/sim-card/supplier'
      fullPath: '/sim-card/supplier'
      preLoaderRoute: typeof AuthenticationSimCardSupplierRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/specification': {
      id: '/_authentication/sim-card/specification'
      path: '/sim-card/specification'
      fullPath: '/sim-card/specification'
      preLoaderRoute: typeof AuthenticationSimCardSpecificationRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/resource': {
      id: '/_authentication/sim-card/resource'
      path: '/sim-card/resource'
      fullPath: '/sim-card/resource'
      preLoaderRoute: typeof AuthenticationSimCardResourceRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/organization': {
      id: '/_authentication/sim-card/organization'
      path: '/sim-card/organization'
      fullPath: '/sim-card/organization'
      preLoaderRoute: typeof AuthenticationSimCardOrganizationRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/card-type': {
      id: '/_authentication/sim-card/card-type'
      path: '/sim-card/card-type'
      fullPath: '/sim-card/card-type'
      preLoaderRoute: typeof AuthenticationSimCardCardTypeRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/card-batch': {
      id: '/_authentication/sim-card/card-batch'
      path: '/sim-card/card-batch'
      fullPath: '/sim-card/card-batch'
      preLoaderRoute: typeof AuthenticationSimCardCardBatchRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/sim-card/card-alert': {
      id: '/_authentication/sim-card/card-alert'
      path: '/sim-card/card-alert'
      fullPath: '/sim-card/card-alert'
      preLoaderRoute: typeof AuthenticationSimCardCardAlertRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/segment': {
      id: '/_authentication/number/segment'
      path: '/number/segment'
      fullPath: '/number/segment'
      preLoaderRoute: typeof AuthenticationNumberSegmentRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/resource': {
      id: '/_authentication/number/resource'
      path: '/number/resource'
      fullPath: '/number/resource'
      preLoaderRoute: typeof AuthenticationNumberResourceRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/region': {
      id: '/_authentication/number/region'
      path: '/number/region'
      fullPath: '/number/region'
      preLoaderRoute: typeof AuthenticationNumberRegionRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/pattern': {
      id: '/_authentication/number/pattern'
      path: '/number/pattern'
      fullPath: '/number/pattern'
      preLoaderRoute: typeof AuthenticationNumberPatternRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/level': {
      id: '/_authentication/number/level'
      path: '/number/level'
      fullPath: '/number/level'
      preLoaderRoute: typeof AuthenticationNumberLevelRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/number/hlr': {
      id: '/_authentication/number/hlr'
      path: '/number/hlr'
      fullPath: '/number/hlr'
      preLoaderRoute: typeof AuthenticationNumberHlrRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/imsi/supplier': {
      id: '/_authentication/imsi/supplier'
      path: '/imsi/supplier'
      fullPath: '/imsi/supplier'
      preLoaderRoute: typeof AuthenticationImsiSupplierRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/imsi/resource': {
      id: '/_authentication/imsi/resource'
      path: '/imsi/resource'
      fullPath: '/imsi/resource'
      preLoaderRoute: typeof AuthenticationImsiResourceRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/imsi/group': {
      id: '/_authentication/imsi/group'
      path: '/imsi/group'
      fullPath: '/imsi/group'
      preLoaderRoute: typeof AuthenticationImsiGroupRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/iframe/$name': {
      id: '/_authentication/iframe/$name'
      path: '/iframe/$name'
      fullPath: '/iframe/$name'
      preLoaderRoute: typeof AuthenticationIframeNameRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/business/card-selection': {
      id: '/_authentication/business/card-selection'
      path: '/business/card-selection'
      fullPath: '/business/card-selection'
      preLoaderRoute: typeof AuthenticationBusinessCardSelectionRouteImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_authentication/_dashboard/dashboard': {
      id: '/_authentication/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticationDashboardDashboardRouteImport
      parentRoute: typeof AuthenticationRoute
    }
  }
}

interface AuthenticationRouteChildren {
  AuthenticationDashboardDashboardRoute: typeof AuthenticationDashboardDashboardRoute
  AuthenticationBusinessCardSelectionRoute: typeof AuthenticationBusinessCardSelectionRoute
  AuthenticationIframeNameRoute: typeof AuthenticationIframeNameRoute
  AuthenticationImsiGroupRoute: typeof AuthenticationImsiGroupRoute
  AuthenticationImsiResourceRoute: typeof AuthenticationImsiResourceRoute
  AuthenticationImsiSupplierRoute: typeof AuthenticationImsiSupplierRoute
  AuthenticationNumberHlrRoute: typeof AuthenticationNumberHlrRoute
  AuthenticationNumberLevelRoute: typeof AuthenticationNumberLevelRoute
  AuthenticationNumberPatternRoute: typeof AuthenticationNumberPatternRoute
  AuthenticationNumberRegionRoute: typeof AuthenticationNumberRegionRoute
  AuthenticationNumberResourceRoute: typeof AuthenticationNumberResourceRoute
  AuthenticationNumberSegmentRoute: typeof AuthenticationNumberSegmentRoute
  AuthenticationSimCardCardAlertRoute: typeof AuthenticationSimCardCardAlertRoute
  AuthenticationSimCardCardBatchRoute: typeof AuthenticationSimCardCardBatchRoute
  AuthenticationSimCardCardTypeRoute: typeof AuthenticationSimCardCardTypeRoute
  AuthenticationSimCardOrganizationRoute: typeof AuthenticationSimCardOrganizationRoute
  AuthenticationSimCardResourceRoute: typeof AuthenticationSimCardResourceRoute
  AuthenticationSimCardSpecificationRoute: typeof AuthenticationSimCardSpecificationRoute
  AuthenticationSimCardSupplierRoute: typeof AuthenticationSimCardSupplierRoute
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationDashboardDashboardRoute: AuthenticationDashboardDashboardRoute,
  AuthenticationBusinessCardSelectionRoute:
    AuthenticationBusinessCardSelectionRoute,
  AuthenticationIframeNameRoute: AuthenticationIframeNameRoute,
  AuthenticationImsiGroupRoute: AuthenticationImsiGroupRoute,
  AuthenticationImsiResourceRoute: AuthenticationImsiResourceRoute,
  AuthenticationImsiSupplierRoute: AuthenticationImsiSupplierRoute,
  AuthenticationNumberHlrRoute: AuthenticationNumberHlrRoute,
  AuthenticationNumberLevelRoute: AuthenticationNumberLevelRoute,
  AuthenticationNumberPatternRoute: AuthenticationNumberPatternRoute,
  AuthenticationNumberRegionRoute: AuthenticationNumberRegionRoute,
  AuthenticationNumberResourceRoute: AuthenticationNumberResourceRoute,
  AuthenticationNumberSegmentRoute: AuthenticationNumberSegmentRoute,
  AuthenticationSimCardCardAlertRoute: AuthenticationSimCardCardAlertRoute,
  AuthenticationSimCardCardBatchRoute: AuthenticationSimCardCardBatchRoute,
  AuthenticationSimCardCardTypeRoute: AuthenticationSimCardCardTypeRoute,
  AuthenticationSimCardOrganizationRoute:
    AuthenticationSimCardOrganizationRoute,
  AuthenticationSimCardResourceRoute: AuthenticationSimCardResourceRoute,
  AuthenticationSimCardSpecificationRoute:
    AuthenticationSimCardSpecificationRoute,
  AuthenticationSimCardSupplierRoute: AuthenticationSimCardSupplierRoute,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  R403Route: R403Route,
  AuthenticationRoute: AuthenticationRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
