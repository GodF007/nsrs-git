apiVersion: v1
kind: List
items:
# NSRS应用运行时配置 - 基于application-sharding.yml适配Kubernetes环境
# 作用：为NSRS应用提供生产环境的配置参数
# 说明：包含数据库连接、Redis集群、分片配置等核心参数
- apiVersion: v1
  data:
    application-sharding.yml: |-
      # 服务器配置
      server:
        port: 8088  # 容器内端口，与Dockerfile中EXPOSE保持一致
        servlet:
          context-path: /nsrs  # 应用上下文路径
      
      spring:
        application:
          name: nsrs
        profiles:
          active: sharding  # 激活分片配置
        mvc:
          pathmatch:
            matching-strategy: ant_path_matcher
        main:
          allow-bean-definition-overriding: true
          web-application-type: servlet
          allow-circular-references: true
        
        # 排除自动配置，使用ShardingSphere管理数据源
        autoconfigure:
          exclude:
            - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
            - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
            - com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
            - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
            - org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration
        
        # ShardingSphere分片配置 - 适配Kubernetes环境
        shardingsphere:
          datasource:
            names: ds0,ds1
            # Druid连接池公共配置
            common:
              type: com.alibaba.druid.pool.DruidDataSource
              driver-class-name: com.mysql.cj.jdbc.Driver
              initial-size: 10
              min-idle: 10
              max-active: 50
              max-wait: 60000
              time-between-eviction-runs-millis: 60000
              min-evictable-idle-time-millis: 300000
              validation-query: SELECT 1 FROM DUAL
              test-while-idle: true
              test-on-borrow: false
              test-on-return: false
              pool-prepared-statements: true
              max-pool-prepared-statement-per-connection-size: 20
              filters: stat,wall,slf4j
              connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
            # 主数据源配置 - 需要根据实际环境修改
            ds0:
              type: com.alibaba.druid.pool.DruidDataSource
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://10.21.1.55:3324/pbs?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true&connectionTimeZone=LOCAL
              username: pbs
              password: pbs
            # 结算数据源配置 - 需要根据实际环境修改
            ds1:
              type: com.alibaba.druid.pool.DruidDataSource
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://10.21.1.55:3324/settledb_dev?useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&autoReconnect=true&failOverReadOnly=false&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&connectionTimeZone=LOCAL
              username: opt_settle
              password: opt_settle
          # 分片规则配置
          sharding:
            default-data-source-name: ds0
            tables:
              # 号码资源表分片配置
              number_resource:
                actual-data-nodes: ds0.number_resource_${['139','177','138','136','135','134','150','151','152','153','155','156','157','158','159','180','181','182','183','184','185','186','187','188','189']}
                table-strategy:
                  inline:
                    sharding-column: number
                    algorithm-expression: number_resource_${number.substring(0,3)}
              # SIM卡分表配置
              sim_card:
                actual-data-nodes: ds0.sim_card_${0..9}
                table-strategy:
                  inline:
                    sharding-column: iccid
                    algorithm-expression: sim_card_${iccid.substring(iccid.length()-3).toInteger() % 10}
              # IMSI资源分表配置
              imsi_resource:
                actual-data-nodes: ds0.imsi_resource_${0..9}
                table-strategy:
                  inline:
                    sharding-column: imsi
                    algorithm-expression: imsi_resource_${imsi.substring(imsi.length()-2).toInteger() % 10}
              # 绑定关系分表配置
              number_imsi_binding:
                actual-data-nodes: ds0.number_imsi_binding_${['139','177','138','136','135','134','150','151','152','153','155','156','157','158','159','180','181','182','183','184','185','186','187','188','189']}
                table-strategy:
                  inline:
                    sharding-column: number
                    algorithm-expression: number_imsi_binding_${number.substring(0,3)}
              # 批量绑定任务表
              batch_binding_task:
                actual-data-nodes: ds1.batch_binding_task
          props:
            sql:
              show: true  # 显示SQL语句，生产环境可设为false
        
        # Redis集群配置 - 需要根据实际环境修改
        redis:
          cluster:
            nodes: 10.21.1.203:7001,10.21.1.203:7002,10.21.1.203:7003,10.21.1.203:7004,10.21.1.203:7005,10.21.1.203:7006
            max-redirects: 6
          timeout: 30000
          jedis:
            pool:
              max-active: 20
              max-wait: -1
              max-idle: 200
              min-idle: 20
      

      
      # 管理端点配置 - 用于健康检查和监控
      management:
        server:
          port: 8088  # 管理端点与业务接口共用端口，适合开发环境
        endpoints:
          web:
            exposure:
              include: health,info,env  # 暴露健康检查、应用信息和环境信息端点（移除metrics避免与ShardingSphere冲突）
        endpoint:
          health:
            show-details: when-authorized  # 只有授权用户才能看到详细健康信息
        health:
          db:
            enabled: false  # 禁用数据库健康检查，避免ShardingSphere isValid方法不支持的问题
       
       # Knife4j API文档配置
      knife4j:
        enable: true
        production: false  # 生产环境建议设为true
        basic:
          enable: false
          username: admin
          password: 123456
        setting:
          language: zh-CN
          enableSwaggerModels: false
          enableDocumentManage: false
          swaggerModelName: 实体类列表
          enableVersion: false
          enableReloadCacheParameter: false
          enableAfterScript: false
          enableFilterMultipartApiMethodType: POST
          enableFilterMultipartApis: false
          enableRequestCache: false
          enableHost: false
          enableHostText: http://localhost:8080
          enableHomeCustom: false
          homeCustomLocation: classpath:doc/home.md
          enableSearch: false
          enableFooter: false
          enableFooterCustom: false
          footerCustomContent: Copyright © 2025 NSRS系统
      
      # 日志配置
      logging:
        level:
          com.nsrs: debug  # NSRS业务日志级别
          org.apache.shardingsphere: warn  # ShardingSphere日志级别，生产环境建议warn
          org.springframework: warn
          springfox: warn
          io.swagger: warn
          io.lettuce: warn  # Redis客户端日志级别，避免过多调试信息
          io.lettuce.core: warn  # Lettuce核心组件日志级别
          io.netty: warn  # Netty网络框架日志级别
      
      # MyBatis-Plus配置
      mybatis-plus:
        mapper-locations: classpath*:mapper/**/*.xml
        type-aliases-package: com.nsrs.**.entity
        configuration:
          map-underscore-to-camel-case: true
          log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
        global-config:
          db-config:
            id-type: auto
            logic-delete-field: deleted
            logic-delete-value: 1
            logic-not-delete-value: 0
      
      # NSRS系统配置
      nsrs:
        auth:
          enabled: true  # 开启内置权限系统
        sharding:
          reload-interval: 60  # 配置重载间隔(秒)

  kind: ConfigMap
  metadata:
    annotations:
      kubesphere.io/creator: admin
      kubesphere.io/description: NSRS应用运行时配置文件，包含数据库分片、Redis集群等核心配置
    labels:
      app: nsrs
      backend: java
      component: config
    name: nsrs-config
    namespace: nsrs