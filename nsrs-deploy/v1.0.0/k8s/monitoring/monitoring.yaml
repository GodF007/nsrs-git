# ServiceMonitor 配置 - 用于 Prometheus 监控
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: nsrs-monitor
  namespace: nsrs
  labels:
    app: nsrs
    component: monitoring
    release: prometheus  # 根据 Prometheus Operator 的标签选择器调整
spec:
  selector:
    matchLabels:
      app: nsrs
      component: application
  endpoints:
  - port: http
    path: /actuator/prometheus
    interval: 30s
    scrapeTimeout: 10s
    honorLabels: true
  namespaceSelector:
    matchNames:
    - nsrs

---
# PrometheusRule 配置 - 告警规则
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: nsrs-alerts
  namespace: nsrs
  labels:
    app: nsrs
    component: alerts
    release: prometheus
spec:
  groups:
  - name: nsrs.rules
    rules:
    # 应用可用性告警
    - alert: NSRSApplicationDown
      expr: up{job="nsrs-monitor"} == 0
      for: 1m
      labels:
        severity: critical
        service: nsrs
      annotations:
        summary: "NSRS application is down"
        description: "NSRS application has been down for more than 1 minute."
    
    # 高 CPU 使用率告警
    - alert: NSRSHighCPUUsage
      expr: rate(process_cpu_seconds_total{job="nsrs-monitor"}[5m]) * 100 > 80
      for: 5m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high CPU usage"
        description: "NSRS CPU usage is above 80% for more than 5 minutes."
    
    # 高内存使用率告警
    - alert: NSRSHighMemoryUsage
      expr: (jvm_memory_used_bytes{job="nsrs-monitor", area="heap"} / jvm_memory_max_bytes{job="nsrs-monitor", area="heap"}) * 100 > 85
      for: 5m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high memory usage"
        description: "NSRS heap memory usage is above 85% for more than 5 minutes."
    
    # 数据库连接池告警
    - alert: NSRSHighDBConnectionUsage
      expr: (hikaricp_connections_active{job="nsrs-monitor"} / hikaricp_connections_max{job="nsrs-monitor"}) * 100 > 80
      for: 2m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high database connection usage"
        description: "NSRS database connection pool usage is above 80% for more than 2 minutes."
    
    # HTTP 错误率告警
    - alert: NSRSHighErrorRate
      expr: (rate(http_server_requests_seconds_count{job="nsrs-monitor", status=~"5.."}[5m]) / rate(http_server_requests_seconds_count{job="nsrs-monitor"}[5m])) * 100 > 5
      for: 3m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high error rate"
        description: "NSRS HTTP error rate is above 5% for more than 3 minutes."
    
    # 响应时间告警
    - alert: NSRSHighResponseTime
      expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{job="nsrs-monitor"}[5m])) > 2
      for: 5m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high response time"
        description: "NSRS 95th percentile response time is above 2 seconds for more than 5 minutes."
    
    # JVM GC 告警
    - alert: NSRSHighGCTime
      expr: rate(jvm_gc_pause_seconds_sum{job="nsrs-monitor"}[5m]) > 0.1
      for: 5m
      labels:
        severity: warning
        service: nsrs
      annotations:
        summary: "NSRS high GC time"
        description: "NSRS JVM garbage collection time is high for more than 5 minutes."
    
    # 磁盘空间告警
    - alert: NSRSLowDiskSpace
      expr: (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100 < 10
      for: 1m
      labels:
        severity: critical
        service: nsrs
      annotations:
        summary: "NSRS low disk space"
        description: "NSRS node disk space is below 10%."

---
# Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsrs-dashboard
  namespace: nsrs
  labels:
    app: nsrs
    component: dashboard
    grafana_dashboard: "1"
data:
  nsrs-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "NSRS Application Dashboard",
        "tags": ["nsrs", "spring-boot", "java"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Application Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"nsrs-monitor\"}",
                "legendFormat": "Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {"options": {"0": {"text": "DOWN", "color": "red"}}, "type": "value"},
                  {"options": {"1": {"text": "UP", "color": "green"}}, "type": "value"}
                ]
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "HTTP Requests Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_server_requests_seconds_count{job=\"nsrs-monitor\"}[5m])",
                "legendFormat": "{{method}} {{uri}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "JVM Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "jvm_memory_used_bytes{job=\"nsrs-monitor\", area=\"heap\"}",
                "legendFormat": "Heap Used"
              },
              {
                "expr": "jvm_memory_max_bytes{job=\"nsrs-monitor\", area=\"heap\"}",
                "legendFormat": "Heap Max"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Database Connection Pool",
            "type": "graph",
            "targets": [
              {
                "expr": "hikaricp_connections_active{job=\"nsrs-monitor\"}",
                "legendFormat": "Active Connections"
              },
              {
                "expr": "hikaricp_connections_max{job=\"nsrs-monitor\"}",
                "legendFormat": "Max Connections"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
# 网络策略 - 安全配置
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nsrs-network-policy
  namespace: nsrs
  labels:
    app: nsrs
    component: security
spec:
  podSelector:
    matchLabels:
      app: nsrs
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # 允许来自 Ingress Controller 的流量
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  
  # 允许来自 Prometheus 的监控流量
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  
  # 允许同命名空间内的流量
  - from:
    - namespaceSelector:
        matchLabels:
          name: nsrs
    ports:
    - protocol: TCP
      port: 8080
  
  egress:
  # 允许访问 MySQL
  - to:
    - podSelector:
        matchLabels:
          app: mysql
    ports:
    - protocol: TCP
      port: 3306
  
  # 允许 DNS 查询
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # 允许访问外部 API（如果需要）
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443